               A_	EQU 0061
               B_	EQU 0062
               C_	EQU 0063
               D_	EQU 0064
               E_	EQU 0065
               F_	EQU 0066
               G_	EQU 0067
               H_	EQU 0068
               I_	EQU 0069
               J_	EQU 006a
               K_	EQU 006b
               L_	EQU 006c
               M_	EQU 006d
               N_	EQU 006e
               O_	EQU 006f
               P_	EQU 0070
               Q_	EQU 0071
               R_	EQU 0072
               S_	EQU 0073
               T_	EQU 0074
               U_	EQU 0075
               V_	EQU 0076
               W_	EQU 0077
               X_	EQU 0078
               Y_	EQU 0079
               Z_	EQU 007a
               I2C_ADDR_PORT	EQU 0001
               I2C_DATA_PORT	EQU 0002
               I2C_CMD_PORT	EQU 0003
               I2C_STATUS_PORT	EQU 0004
               SW_ADDR_PORT	EQU 0005
               SW_DATA_PORT	EQU 0006
               READY_FLAG_	EQU 0001
               TEMP_	EQU 0002
               ADDRESS_	EQU 0003
               DATA_	EQU 0004
               CMD_	EQU 0005
               II_	EQU 0006
               KK_	EQU 0007
               
               			LOAD	R1, 0001
0000 AE01 0001
               			STORE	R1, READY_FLAG_
0002 F401 0001
               			LOAD	R1, 0000
0004 AE01 0000
               			STORE	R1, TEMP_
0006 F401 0002
               			LOAD	R1, 0000
0008 AE01 0000
               			STORE	R1, ADDRESS_
000A F401 0003
               			LOAD	R1, A_
000C AE01 0061
               			STORE	R1, DATA_
000E F401 0004
               			LOAD	R1, 0001
0010 AE01 0001
               			STORE	R1, CMD_
0012 F401 0005
               			LOAD	R1, 0000
0014 AE01 0000
               			STORE	R1, II_
0016 F401 0006
               			LOAD	R1, 0000
0018 AE01 0000
               			STORE	R1, KK_
001A F401 0007
               
               MAIN
               			ENINT
001C 1E00               			JUMP	LABEL1	;while loop check condition
001D A400 001f
               LABEL0
               LABEL1
               			JUMP	LABEL0	;while loop
001F A400 001f
               
               
               			ADDRESS 0300
               ISR
               			INPUT	R7, I2C_STATUS_PORT
0300 A207 0004
               			STORE	R7, TEMP_
0302 F407 0002
               			FETCH	R4, TEMP_
0304 F004 0002
               			COMP 	R4, 0001
0306 9804 0001
               			JUMPNZ	LABEL2	;if statement
0308 AC00 032b
               			INPUT	R7, SW_ADDR_PORT
030A A207 0005
               			STORE	R7, ADDRESS_
030C F407 0003
               			
               			COMP	R7, 000F ; compare ADDRESS_ to LCD address
030E 9807 000F
               			JUMPZ	PRINT_CHAR
0310 AA00 031f
               			INPUT	R8, SW_DATA_PORT ; get data from data switches to R8
0312 A208 0006
               			STORE	R8, TEMP_
0314 F408 0002
               
               			OUTPUT	R7, I2C_ADDR_PORT ; R7 still holds ADDRESS_
0316 B807 0001
               			OUTPUT	R8, I2C_DATA_PORT ; R8 is holding switches data
0318 B808 0002
               			FETCH   R7, CMD_
031A F007 0005
               			OUTPUT  R7, I2C_CMD_PORT
031C B807 0003
               			
               			RETEN
031E 4600               			
               PRINT_CHAR			
               			FETCH	R7, ADDRESS_
031F F007 0003
               			OUTPUT	R7, I2C_ADDR_PORT
0321 B807 0001
               			FETCH	R7, DATA_
0323 F007 0004
               			OUTPUT	R7, I2C_DATA_PORT
0325 B807 0002
               			FETCH	R7, CMD_
0327 F007 0005
               			OUTPUT	R7, I2C_CMD_PORT
0329 B807 0003
               LABEL2
               			FETCH	R4, DATA_
032B F004 0004
               			ADD 	R4, 0001
032D 8204 0001
               			STORE	R4, DATA_
032F F404 0004
               			LOAD	R4, 0000
0331 AE04 0000
               			STORE	R4, KK_
0333 F404 0007
               LABEL3
               			FETCH	R2, KK_
0335 F002 0007
               			ADD 	R2, 0001
0337 8202 0001
               			STORE	R2, KK_
0339 F402 0007
               			LOAD	R4, 0000
033B AE04 0000
               			STORE	R4, II_
033D F404 0006
               			JUMP	LABEL5	;while loop check condition
033F A400 0347
               LABEL4
               			FETCH	R4, II_
0341 F004 0006
               			ADD 	R4, 0001
0343 8204 0001
               			STORE	R4, II_
0345 F404 0006
               LABEL5
               			FETCH	R4, II_
0347 F004 0006
               			COMP 	R4, 01f4
0349 9804 01F4
               			JUMPC	LABEL4	;while loop
034B A600 0341
               			FETCH	R4, KK_
034D F004 0007
               			COMP 	R4, 0064
034F 9804 0064
               			JUMPC	LABEL3	;for loop
0351 A600 0335
               			FETCH	R4, DATA_
0353 F004 0004
               			COMP 	R4, Z_
0355 9804 007A
               			JUMPNZ	LABEL6	;if statement
0357 AC00 035d
               			LOAD	R4, A_
0359 AE04 0061
               			STORE	R4, DATA_
035B F404 0004
               LABEL6
               			RETEN
035D 4600               
               			ADDRESS	0FFE
               
               			JUMP	ISR
0FFE A400 0300
               
               			END